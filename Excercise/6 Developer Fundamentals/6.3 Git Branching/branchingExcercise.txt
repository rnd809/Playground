Part I
Answer the following questions:

1) What git command creates a branch?
There are two options to create a branch:
	A) git branch name_of_newBranch
	B) git checkout -b name_of_newBranch

2) What is the difference between a fast-forward and recursive merge?
A fast-forward is a branch that merges with a linear path from the current branch tip to the target branch.
The recursive merge is usually where the merge conflicts occurs. In the event of a merge conflict, both branch 
have been modified at the same place and git tends to need our help to decide which changes to keep.

3) What git command changes to another branch?
Git checkout branchName

4) What git command deletes a branch?
Git branch -d nameOfBranch

5) How do merge conflicts happen?
Merge conflicts happens during a recursive merge/ a 3 way merge. This means that the receiving branch has modifies the same file we are trying to merge.


Part II
Practice with fast forward and recursive merges! Make a branch and add and commit onto it and merge it back into master.

Try to create your own merge conflict by modifying the same file on two separate commits on two separate branches.